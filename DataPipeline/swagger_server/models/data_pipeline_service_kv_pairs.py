#ACUMOS
#================================================================================
#Copyright Â© 2018 AT&T Intellectual Property. All rights reserved.
#================================================================================
#This Acumos software file is distributed by AT&Tunder the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#This file is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and 
#limitations under the License.

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.data_pipeline_service_kv_pair import DataPipelineServiceKVPair  # noqa: F401,E501
from swagger_server import util


class DataPipelineServiceKVPairs(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, kv: List[DataPipelineServiceKVPair]=None):  # noqa: E501
        """DataPipelineServiceKVPairs - a model defined in Swagger

        :param kv: The kv of this DataPipelineServiceKVPairs.  # noqa: E501
        :type kv: List[DataPipelineServiceKVPair]
        """
        self.swagger_types = {
            'kv': List[DataPipelineServiceKVPair]
        }

        self.attribute_map = {
            'kv': 'kv'
        }

        self._kv = kv

    @classmethod
    def from_dict(cls, dikt) -> 'DataPipelineServiceKVPairs':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DataPipelineServiceKVPairs of this DataPipelineServiceKVPairs.  # noqa: E501
        :rtype: DataPipelineServiceKVPairs
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kv(self) -> List[DataPipelineServiceKVPair]:
        """Gets the kv of this DataPipelineServiceKVPairs.


        :return: The kv of this DataPipelineServiceKVPairs.
        :rtype: List[DataPipelineServiceKVPair]
        """
        return self._kv

    @kv.setter
    def kv(self, kv: List[DataPipelineServiceKVPair]):
        """Sets the kv of this DataPipelineServiceKVPairs.


        :param kv: The kv of this DataPipelineServiceKVPairs.
        :type kv: List[DataPipelineServiceKVPair]
        """

        self._kv = kv
