#ACUMOS
#================================================================================
#Copyright @ 2018 AT&T Intellectual Property. All rights reserved.
#================================================================================
#This Acumos software file is distributed by AT&T under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#This file is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and 
#limitations under the License.

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.data_pipeline_service_identifier import DataPipelineServiceIdentifier  # noqa: F401,E501
from swagger_server import util


class DataPipelineServicePools(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, pool: List[DataPipelineServiceIdentifier]=None):  # noqa: E501
        """DataPipelineServicePools - a model defined in Swagger

        :param pool: The pool of this DataPipelineServicePools.  # noqa: E501
        :type pool: List[DataPipelineServiceIdentifier]
        """
        self.swagger_types = {
            'pool': List[DataPipelineServiceIdentifier]
        }

        self.attribute_map = {
            'pool': 'pool'
        }

        self._pool = pool

    @classmethod
    def from_dict(cls, dikt) -> 'DataPipelineServicePools':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DataPipelineServicePools of this DataPipelineServicePools.  # noqa: E501
        :rtype: DataPipelineServicePools
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pool(self) -> List[DataPipelineServiceIdentifier]:
        """Gets the pool of this DataPipelineServicePools.


        :return: The pool of this DataPipelineServicePools.
        :rtype: List[DataPipelineServiceIdentifier]
        """
        return self._pool

    @pool.setter
    def pool(self, pool: List[DataPipelineServiceIdentifier]):
        """Sets the pool of this DataPipelineServicePools.


        :param pool: The pool of this DataPipelineServicePools.
        :type pool: List[DataPipelineServiceIdentifier]
        """

        self._pool = pool
