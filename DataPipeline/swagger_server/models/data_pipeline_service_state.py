# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.data_pipeline_service_servicestatus import DataPipelineServiceSERVICESTATUS  # noqa: F401,E501
from swagger_server import util


class DataPipelineServiceState(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, status: DataPipelineServiceSERVICESTATUS=None, logs: List[str]=None):  # noqa: E501
        """DataPipelineServiceState - a model defined in Swagger

        :param status: The status of this DataPipelineServiceState.  # noqa: E501
        :type status: DataPipelineServiceSERVICESTATUS
        :param logs: The logs of this DataPipelineServiceState.  # noqa: E501
        :type logs: List[str]
        """
        self.swagger_types = {
            'status': DataPipelineServiceSERVICESTATUS,
            'logs': List[str]
        }

        self.attribute_map = {
            'status': 'status',
            'logs': 'logs'
        }

        self._status = status
        self._logs = logs

    @classmethod
    def from_dict(cls, dikt) -> 'DataPipelineServiceState':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DataPipelineServiceState of this DataPipelineServiceState.  # noqa: E501
        :rtype: DataPipelineServiceState
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self) -> DataPipelineServiceSERVICESTATUS:
        """Gets the status of this DataPipelineServiceState.


        :return: The status of this DataPipelineServiceState.
        :rtype: DataPipelineServiceSERVICESTATUS
        """
        return self._status

    @status.setter
    def status(self, status: DataPipelineServiceSERVICESTATUS):
        """Sets the status of this DataPipelineServiceState.


        :param status: The status of this DataPipelineServiceState.
        :type status: DataPipelineServiceSERVICESTATUS
        """

        self._status = status

    @property
    def logs(self) -> List[str]:
        """Gets the logs of this DataPipelineServiceState.


        :return: The logs of this DataPipelineServiceState.
        :rtype: List[str]
        """
        return self._logs

    @logs.setter
    def logs(self, logs: List[str]):
        """Sets the logs of this DataPipelineServiceState.


        :param logs: The logs of this DataPipelineServiceState.
        :type logs: List[str]
        """

        self._logs = logs
