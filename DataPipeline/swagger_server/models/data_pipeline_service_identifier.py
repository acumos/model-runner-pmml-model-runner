#ACUMOS
#================================================================================
#Copyright Â© 2018 AT&T Intellectual Property. All rights reserved.
#================================================================================
#This Acumos software file is distributed by AT&Tunder the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#This file is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and 
#limitations under the License.

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.data_pipeline_service_identifier_type import DataPipelineServiceIdentifierType  # noqa: F401,E501
from swagger_server.models.data_pipeline_service_kv_pairs import DataPipelineServiceKVPairs  # noqa: F401,E501
from swagger_server import util


class DataPipelineServiceIdentifier(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, uuid: str=None, type: DataPipelineServiceIdentifierType=None, name: str=None, metrics: DataPipelineServiceKVPairs=None):  # noqa: E501
        """DataPipelineServiceIdentifier - a model defined in Swagger

        :param uuid: The uuid of this DataPipelineServiceIdentifier.  # noqa: E501
        :type uuid: str
        :param type: The type of this DataPipelineServiceIdentifier.  # noqa: E501
        :type type: DataPipelineServiceIdentifierType
        :param name: The name of this DataPipelineServiceIdentifier.  # noqa: E501
        :type name: str
        :param metrics: The metrics of this DataPipelineServiceIdentifier.  # noqa: E501
        :type metrics: DataPipelineServiceKVPairs
        """
        self.swagger_types = {
            'uuid': str,
            'type': DataPipelineServiceIdentifierType,
            'name': str,
            'metrics': DataPipelineServiceKVPairs
        }

        self.attribute_map = {
            'uuid': 'uuid',
            'type': 'type',
            'name': 'name',
            'metrics': 'metrics'
        }

        self._uuid = uuid
        self._type = type
        self._name = name
        self._metrics = metrics

    @classmethod
    def from_dict(cls, dikt) -> 'DataPipelineServiceIdentifier':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DataPipelineServiceIdentifier of this DataPipelineServiceIdentifier.  # noqa: E501
        :rtype: DataPipelineServiceIdentifier
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uuid(self) -> str:
        """Gets the uuid of this DataPipelineServiceIdentifier.


        :return: The uuid of this DataPipelineServiceIdentifier.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid: str):
        """Sets the uuid of this DataPipelineServiceIdentifier.


        :param uuid: The uuid of this DataPipelineServiceIdentifier.
        :type uuid: str
        """

        self._uuid = uuid

    @property
    def type(self) -> DataPipelineServiceIdentifierType:
        """Gets the type of this DataPipelineServiceIdentifier.


        :return: The type of this DataPipelineServiceIdentifier.
        :rtype: DataPipelineServiceIdentifierType
        """
        return self._type

    @type.setter
    def type(self, type: DataPipelineServiceIdentifierType):
        """Sets the type of this DataPipelineServiceIdentifier.


        :param type: The type of this DataPipelineServiceIdentifier.
        :type type: DataPipelineServiceIdentifierType
        """

        self._type = type

    @property
    def name(self) -> str:
        """Gets the name of this DataPipelineServiceIdentifier.


        :return: The name of this DataPipelineServiceIdentifier.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this DataPipelineServiceIdentifier.


        :param name: The name of this DataPipelineServiceIdentifier.
        :type name: str
        """

        self._name = name

    @property
    def metrics(self) -> DataPipelineServiceKVPairs:
        """Gets the metrics of this DataPipelineServiceIdentifier.


        :return: The metrics of this DataPipelineServiceIdentifier.
        :rtype: DataPipelineServiceKVPairs
        """
        return self._metrics

    @metrics.setter
    def metrics(self, metrics: DataPipelineServiceKVPairs):
        """Sets the metrics of this DataPipelineServiceIdentifier.


        :param metrics: The metrics of this DataPipelineServiceIdentifier.
        :type metrics: DataPipelineServiceKVPairs
        """

        self._metrics = metrics
